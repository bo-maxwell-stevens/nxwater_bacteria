knitr::opts_chunk$set(echo = TRUE)
source("myFunctions.R")
# Create GIBBs relative abundances for RhizoDD1
EC.gibbs.info <- read.csv('GIBBs.EC.numbers.csv')
EC.gibbs <- read.csv('EMU_database.GIBBs.EC.PICRUSt2.R.csv')
row.names(EC.gibbs) <- EC.gibbs$tax_id
EC.gibbs <- EC.gibbs[,2:34]
df <- read.csv('../rel_abund_16S_ABC_qpcr_adj.csv')
EC.sub <- EC.gibbs
EC.bin <- EC.sub %>%
mutate_if(is.numeric, ~1 * (. > 0))
dplyr)
library(dplyr)
library(emmeans)
library(ggplot2)
library(ggthemes)
library(multcomp)
library(phyloseq)
library(RColorBrewer)
library(readxl)
library(tidyverse)
library(microbiomeMarker)
EC.bin <- EC.sub %>%
mutate_if(is.numeric, ~1 * (. > 0))
samples <- names(df)[9:length(names(df))]
enzymes <- names(EC.sub)[11:length(names(EC.sub))]
reads <- colSums(df[,samples], na.rm=T)
final <- data.frame(matrix(ncol = length(samples), nrow = length(enzymes)))
names(final) <- samples
row.names(final) <- enzymes
i = samples[2]
knitr::opts_chunk$set(echo = TRUE)
# Repeating the nested loops
for (n in 1:num_repeats) {
for (i in samples) {
for (j in enzymes) {
value <- sum(df[,i] / EC.bin$X16S_rRNA_Count * EC.bin[,j], na.rm=T) / reads[i]
final[j,i] <- value
}
}
}
# Number of times to repeat the loop
num_repeats = 3
# Repeating the nested loops
for (n in 1:num_repeats) {
for (i in samples) {
for (j in enzymes) {
value <- sum(df[,i] / EC.bin$X16S_rRNA_Count * EC.bin[,j], na.rm=T) / reads[i]
final[j,i] <- value
}
}
}
knitr::opts_chunk$set(echo = TRUE)
for (i in samples[1:3]) {
for (j in enzymes) {
value <- sum(df[,i] / EC.bin$X16S_rRNA_Count * EC.bin[,j], na.rm=T) / reads[i]
final[j,i] <- value
}
}
knitr::opts_chunk$set(echo = TRUE)
for (i in samples[1:3]) {
for (j in enzymes) {
print(paste("Length df[,i]:", length(df[,i])))
print(paste("Length EC.bin$X16S_rRNA_Count:", length(EC.bin$X16S_rRNA_Count)))
print(paste("Length EC.bin[,j]:", length(EC.bin[,j])))
value <- sum(df[,i] / EC.bin$X16S_rRNA_Count * EC.bin[,j], na.rm=T) / reads[i]
final[j,i] <- value
}
}
